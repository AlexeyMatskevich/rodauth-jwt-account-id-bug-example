--
-- PostgreSQL database dump
--

-- Dumped from database version 12.2 (Ubuntu 12.2-4)
-- Dumped by pg_dump version 12.2 (Ubuntu 12.2-4)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: citext; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public;


--
-- Name: EXTENSION citext; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION citext IS 'data type for case-insensitive character strings';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: rodauth_get_previous_salt(bigint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.rodauth_get_previous_salt(acct_id bigint) RETURNS text
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_temp'
    AS $$
DECLARE salt text;
BEGIN
SELECT substr(password_hash, 0, 30) INTO salt 
FROM account_previous_password_hashes
WHERE acct_id = id;
RETURN salt;
END;
$$;


--
-- Name: rodauth_previous_password_hash_match(bigint, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.rodauth_previous_password_hash_match(acct_id bigint, hash text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_temp'
    AS $$
DECLARE valid boolean;
BEGIN
SELECT password_hash = hash INTO valid 
FROM account_previous_password_hashes
WHERE acct_id = id;
RETURN valid;
END;
$$;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: account_authentication_audit_logs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_authentication_audit_logs (
    id bigint NOT NULL,
    account_id uuid NOT NULL,
    at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    message text NOT NULL,
    metadata jsonb
);


--
-- Name: account_authentication_audit_logs_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.account_authentication_audit_logs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.account_authentication_audit_logs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: account_email_auth_keys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_email_auth_keys (
    id uuid NOT NULL,
    key text NOT NULL,
    deadline timestamp without time zone DEFAULT ((CURRENT_TIMESTAMP)::timestamp without time zone + '1 day'::interval) NOT NULL,
    email_last_sent timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: account_jwt_refresh_keys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_jwt_refresh_keys (
    id bigint NOT NULL,
    account_id uuid NOT NULL,
    key text NOT NULL,
    deadline timestamp without time zone DEFAULT ((CURRENT_TIMESTAMP)::timestamp without time zone + '1 day'::interval) NOT NULL
);


--
-- Name: account_jwt_refresh_keys_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.account_jwt_refresh_keys ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.account_jwt_refresh_keys_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: account_lockouts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_lockouts (
    id uuid NOT NULL,
    key text NOT NULL,
    deadline timestamp without time zone DEFAULT ((CURRENT_TIMESTAMP)::timestamp without time zone + '1 day'::interval) NOT NULL,
    email_last_sent timestamp without time zone
);


--
-- Name: account_login_change_keys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_login_change_keys (
    id uuid NOT NULL,
    key text NOT NULL,
    login text NOT NULL,
    deadline timestamp without time zone DEFAULT ((CURRENT_TIMESTAMP)::timestamp without time zone + '1 day'::interval) NOT NULL
);


--
-- Name: account_login_failures; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_login_failures (
    id uuid NOT NULL,
    number integer DEFAULT 1 NOT NULL
);


--
-- Name: account_password_reset_keys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_password_reset_keys (
    id uuid NOT NULL,
    key text NOT NULL,
    deadline timestamp without time zone DEFAULT ((CURRENT_TIMESTAMP)::timestamp without time zone + '1 day'::interval) NOT NULL,
    email_last_sent timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: account_previous_password_hashes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_previous_password_hashes (
    id bigint NOT NULL,
    account_id uuid,
    password_hash text NOT NULL
);


--
-- Name: account_previous_password_hashes_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.account_previous_password_hashes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.account_previous_password_hashes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: account_statuses; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_statuses (
    id integer NOT NULL,
    name text NOT NULL
);


--
-- Name: account_verification_keys; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.account_verification_keys (
    id uuid NOT NULL,
    key text NOT NULL,
    requested_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    email_last_sent timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: accounts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.accounts (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    status_id integer DEFAULT 1 NOT NULL,
    email public.citext NOT NULL,
    password_hash text NOT NULL,
    CONSTRAINT valid_email CHECK ((email OPERATOR(public.~) '^[^,;@ \r\n]+@[^,@; \r\n]+\.[^,@; \r\n]+$'::public.citext))
);


--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.schema_migrations (
    filename text NOT NULL
);


--
-- Name: account_authentication_audit_logs account_authentication_audit_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_authentication_audit_logs
    ADD CONSTRAINT account_authentication_audit_logs_pkey PRIMARY KEY (id);


--
-- Name: account_email_auth_keys account_email_auth_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_email_auth_keys
    ADD CONSTRAINT account_email_auth_keys_pkey PRIMARY KEY (id);


--
-- Name: account_jwt_refresh_keys account_jwt_refresh_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_jwt_refresh_keys
    ADD CONSTRAINT account_jwt_refresh_keys_pkey PRIMARY KEY (id);


--
-- Name: account_lockouts account_lockouts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_lockouts
    ADD CONSTRAINT account_lockouts_pkey PRIMARY KEY (id);


--
-- Name: account_login_change_keys account_login_change_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_login_change_keys
    ADD CONSTRAINT account_login_change_keys_pkey PRIMARY KEY (id);


--
-- Name: account_login_failures account_login_failures_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_login_failures
    ADD CONSTRAINT account_login_failures_pkey PRIMARY KEY (id);


--
-- Name: account_password_reset_keys account_password_reset_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_password_reset_keys
    ADD CONSTRAINT account_password_reset_keys_pkey PRIMARY KEY (id);


--
-- Name: account_previous_password_hashes account_previous_password_hashes_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_previous_password_hashes
    ADD CONSTRAINT account_previous_password_hashes_pkey PRIMARY KEY (id);


--
-- Name: account_statuses account_statuses_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_statuses
    ADD CONSTRAINT account_statuses_name_key UNIQUE (name);


--
-- Name: account_statuses account_statuses_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_statuses
    ADD CONSTRAINT account_statuses_pkey PRIMARY KEY (id);


--
-- Name: account_verification_keys account_verification_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_verification_keys
    ADD CONSTRAINT account_verification_keys_pkey PRIMARY KEY (id);


--
-- Name: accounts accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.accounts
    ADD CONSTRAINT accounts_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (filename);


--
-- Name: account_jwt_rk_account_id_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX account_jwt_rk_account_id_idx ON public.account_jwt_refresh_keys USING btree (account_id);


--
-- Name: accounts_email_index; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX accounts_email_index ON public.accounts USING btree (email) WHERE (status_id = ANY (ARRAY[1, 2]));


--
-- Name: audit_account_at_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX audit_account_at_idx ON public.account_authentication_audit_logs USING btree (account_id, at);


--
-- Name: audit_at_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX audit_at_idx ON public.account_authentication_audit_logs USING btree (at);


--
-- Name: account_authentication_audit_logs account_authentication_audit_logs_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_authentication_audit_logs
    ADD CONSTRAINT account_authentication_audit_logs_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id);


--
-- Name: account_email_auth_keys account_email_auth_keys_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_email_auth_keys
    ADD CONSTRAINT account_email_auth_keys_id_fkey FOREIGN KEY (id) REFERENCES public.accounts(id);


--
-- Name: account_jwt_refresh_keys account_jwt_refresh_keys_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_jwt_refresh_keys
    ADD CONSTRAINT account_jwt_refresh_keys_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id);


--
-- Name: account_lockouts account_lockouts_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_lockouts
    ADD CONSTRAINT account_lockouts_id_fkey FOREIGN KEY (id) REFERENCES public.accounts(id);


--
-- Name: account_login_change_keys account_login_change_keys_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_login_change_keys
    ADD CONSTRAINT account_login_change_keys_id_fkey FOREIGN KEY (id) REFERENCES public.accounts(id);


--
-- Name: account_login_failures account_login_failures_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_login_failures
    ADD CONSTRAINT account_login_failures_id_fkey FOREIGN KEY (id) REFERENCES public.accounts(id);


--
-- Name: account_password_reset_keys account_password_reset_keys_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_password_reset_keys
    ADD CONSTRAINT account_password_reset_keys_id_fkey FOREIGN KEY (id) REFERENCES public.accounts(id);


--
-- Name: account_previous_password_hashes account_previous_password_hashes_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_previous_password_hashes
    ADD CONSTRAINT account_previous_password_hashes_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id);


--
-- Name: account_verification_keys account_verification_keys_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.account_verification_keys
    ADD CONSTRAINT account_verification_keys_id_fkey FOREIGN KEY (id) REFERENCES public.accounts(id);


--
-- Name: accounts accounts_status_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.accounts
    ADD CONSTRAINT accounts_status_id_fkey FOREIGN KEY (status_id) REFERENCES public.account_statuses(id);


--
-- PostgreSQL database dump complete
--



--
-- PostgreSQL database dump
--

-- Dumped from database version 12.2 (Ubuntu 12.2-4)
-- Dumped by pg_dump version 12.2 (Ubuntu 12.2-4)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.schema_migrations VALUES ('20200705234712_add_account_statuses.rb');
INSERT INTO public.schema_migrations VALUES ('20200705234738_add_citext_extension.rb');
INSERT INTO public.schema_migrations VALUES ('20200705234745_add_pgcrypto_extension.rb');
INSERT INTO public.schema_migrations VALUES ('20200705234802_add_account.rb');
INSERT INTO public.schema_migrations VALUES ('20200706004555_add_account_authentication_audit_logs.rb');
INSERT INTO public.schema_migrations VALUES ('20200706004716_add_account_password_reset_keys.rb');
INSERT INTO public.schema_migrations VALUES ('20200706004752_add_account_jwt_refresh_keys.rb');
INSERT INTO public.schema_migrations VALUES ('20200706004914_add_account_verification_keys.rb');
INSERT INTO public.schema_migrations VALUES ('20200706005008_add_account_login_change_keys.rb');
INSERT INTO public.schema_migrations VALUES ('20200706005035_add_account_login_failures.rb');
INSERT INTO public.schema_migrations VALUES ('20200706005108_add_account_lockouts.rb');
INSERT INTO public.schema_migrations VALUES ('20200706005132_add_account_email_auth_keys.rb');
INSERT INTO public.schema_migrations VALUES ('20200706011607_add_account_previous_password_hashes.rb');


--
-- PostgreSQL database dump complete
--

